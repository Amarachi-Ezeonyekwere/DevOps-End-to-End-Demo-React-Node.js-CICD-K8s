name: Backend CI/CD Pipeline

on:
  push:
    branches: [master]
    paths:
      - 'backend/**'
    pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'

jobs:
  build-test-scan:
    name: CI - Build, Lint, Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18-slim'

    - name: Install dependencies
      run: npm ci
      working-directory: backend
    


    - name: Lint code
      run: |
        npm install eslint --save-dev
        npx eslint . || echo "Lint warnings found"
      working-directory: backend

    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: weather_backend:latest
        format: table
        severity: HIGH,CRITICAL

    - name: Build Docker image
      run: docker build -t weather_backend .
      working-directory: backend

  tag-and-push:
    name: CD - Tag and Push to Docker Hub
    needs: build-test-scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract version tag
      id: vars
      run: echo "VERSION=v1.0.0-$(date +'%Y.%m.%d')-${{ github.sha }}" >> $GITHUB_ENV

    - name: Build and tag image
      run: |
        docker build -t amara3000/weather-backend:${{ env.VERSION }} .
        docker tag amara3000/weather-backend:${{ env.VERSION }} amara3000/weather-backend:latest

    - name: Push image to Docker Hub
      run: |
        docker push amara3000/weather-backend:${{ env.VERSION }}
        docker push amara3000/weather-backend:latest